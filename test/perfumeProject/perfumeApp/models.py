from django.db import models
from django.utils.text import slugify


# Create your models here.
class Category(models.Model):
    name = models.CharField(max_length=100, verbose_name='–ò–º—è –∫–∞—Ç–µ–≥–æ—Ä–∏–∏')
    icon = models.ImageField(upload_to='icons/', null=True, blank=True, verbose_name='–ò–∫–æ–Ω–∫–∞ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏')
    slug = models.SlugField(unique=True, blank=True, null=True)

    def save(self, *args, **kwargs):
        if not self.slug:
            self.slug = slugify(self.name)
        super().save(*args, **kwargs)

    def __str__(self):
        return self.name

    class Meta:
        verbose_name = '–ö–∞—Ç–µ–≥–æ—Ä–∏—è'
        verbose_name_plural = '–ö–∞—Ç–µ–≥–æ—Ä–∏–∏'


class SubCategory(models.Model):
    name = models.CharField(max_length=100, verbose_name='–ò–º—è –ø–æ–¥–∫–∞—Ç–µ–≥–æ—Ä–∏–∏')
    icon = models.ImageField(upload_to='icons/', null=True, blank=True, verbose_name='–ò–∫–æ–Ω–∫–∞ –ø–æ–¥–∫–∞—Ç–µ–≥–æ—Ä–∏–∏')
    slug = models.SlugField(unique=True, blank=True, null=True)
    category = models.ForeignKey(Category, on_delete=models.CASCADE, related_name='subcategories',
                                 verbose_name='–í—ã–±–æ—Ä –∫–∞—Ç–µ–≥–æ—Ä–∏–∏')

    def save(self, *args, **kwargs):
        if not self.slug:
            self.slug = slugify(self.name)
        super().save(*args, **kwargs)

    def __str__(self):
        return self.name

    class Meta:
        verbose_name = '–ü–æ–¥–∫–∞—Ç–µ–≥–æ—Ä–∏—è'
        verbose_name_plural = '–ü–æ–¥–∫–∞—Ç–µ–≥–æ—Ä–∏–∏'


class Product(models.Model):
    STATUS_CHOICES = [
        ('new', '–ù–æ–≤—ã–π'),
        ('popular', '–ü–æ–ø—É–ª—è—Ä–Ω—ã–π'),
    ]

    name = models.CharField(max_length=255, verbose_name='–ò–º—è —Ç–æ–≤–∞—Ä–∞')
    short_description = models.TextField(verbose_name='–ö–æ—Ä–æ—Ç–∫–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞')
    description = models.TextField(verbose_name='–ü–æ–ª–Ω–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞')
    price = models.IntegerField(verbose_name='–¶–µ–Ω–∞ —Ç–æ–≤–∞—Ä–∞')
    discount = models.PositiveIntegerField(blank=True, null=True, verbose_name='–°–∫–∏–¥–∫–∞ —Ç–æ–≤–∞—Ä–∞')
    status = models.CharField(max_length=10, choices=STATUS_CHOICES, null=True, blank=True,
                              verbose_name='–°—Ç–∞—Ç—É—Å —Ç–æ–≤–∞—Ä–∞')
    slug = models.SlugField(unique=True, blank=True)
    created_at = models.DateTimeField(auto_now_add=True)
    category = models.ForeignKey(Category, on_delete=models.CASCADE, related_name='products',
                                 verbose_name='–ö–∞—Ç–µ–≥–æ—Ä–∏—è —Ç–æ–≤–∞—Ä–∞')
    subcategory = models.ForeignKey(SubCategory, on_delete=models.CASCADE, related_name='sub_products',
                                    verbose_name='–ü–æ–¥–∫–∞—Ç–µ–≥–æ—Ä–∏—è —Ç–æ–≤–∞—Ä–∞')

    def save(self, *args, **kwargs):
        if not self.slug:
            self.slug = slugify(self.name)
        super().save(*args, **kwargs)

    def __str__(self):
        return self.name

    class Meta:
        verbose_name = '–¢–æ–≤–∞—Ä'
        verbose_name_plural = '–¢–æ–≤–∞—Ä—ã'


class ProductImage(models.Model):
    image = models.ImageField(upload_to='products/images/')
    product = models.ForeignKey(Product, on_delete=models.CASCADE, related_name='images')

    def __str__(self):
        return self.product.name

    class Meta:
        verbose_name = '–§–æ—Ç–æ —Ç–æ–≤–∞—Ä–∞'
        verbose_name_plural = '–§–æ—Ç–æ —Ç–æ–≤–∞—Ä–æ–≤'


from .utils.telegram import send_telegram_message

class ContactRequest(models.Model):
    name = models.CharField(max_length=255, verbose_name='–ò–º—è')
    phone = models.CharField(max_length=20, verbose_name='–¢–µ–ª–µ—Ñ–æ–Ω')
    message = models.TextField(blank=True, null=True, verbose_name='–°–æ–æ–±—â–µ–Ω–∏–µ')
    created_at = models.DateTimeField(auto_now_add=True, verbose_name='–î–∞—Ç–∞ —Å–æ–∑–¥–∞–Ω–∏—è')

    def save(self, *args, **kwargs):
        is_new = self.pk is None
        super().save(*args, **kwargs)
        if is_new:
            text = (
                f"<b>–ù–æ–≤–∞—è –∑–∞—è–≤–∫–∞ —Å —Å–∞–π—Ç–∞!</b>\n\n"
                f"üë§ –ò–º—è: {self.name}\n"
                f"üìû –¢–µ–ª–µ—Ñ–æ–Ω: {self.phone}\n"
                f"üìù –°–æ–æ–±—â–µ–Ω–∏–µ: {self.message or '–ù–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏—è.'}"
            )
            send_telegram_message(text)

    def __str__(self):
        return f"{self.name} - {self.phone}"

    class Meta:
        verbose_name = '–ó–∞—è–≤–∫–∞ –Ω–∞ –æ–±—Ä–∞—Ç–Ω—É—é —Å–≤—è–∑—å'
        verbose_name_plural = '–ó–∞—è–≤–∫–∏ –Ω–∞ –æ–±—Ä–∞—Ç–Ω—É—é —Å–≤—è–∑—å'


